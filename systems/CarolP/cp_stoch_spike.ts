declare lower;
input signalBarsTolerance = 2;
input posX_RangeTop = 80;
input posX_RangeBottom = 50;
input negX_RangeTop = 50;
input negX_RangeBottom = 20;
input fastLength = 12;
input slowLength = 26;
input MACDLength = 9;
input averageTypeMACD = AverageType.EXPONENTIAL;
def Diff = MACD(fastLength, slowLength, MACDLength, averageTypeMACD).Diff;
input KPeriod = 9;
input DPeriod = 3;
input over_bought = 80;
input over_sold = 20;
input Orange_KPeriod = 10;
input Orange_DPeriod = 10;
input priceH = high;
input priceL = low;
input priceC = close;
input averageTypeSTOCH = AverageType.SIMPLE;

def SlowK = reference StochasticFull(over_bought,over_sold,KPeriod,DPeriod,priceH,priceL,priceC,3,averageTypeStoch).FullK;
def SlowD = reference StochasticFull(over_bought,over_sold,KPeriod,DPeriod,priceH,priceL,priceC,3,averageTypeStoch).FullD;
def histogramCrossesAbove = Diff[1] < 0 and Diff > 0;
def histogramCrossesBelow = Diff[1] > 0 and Diff < 0;
def slowKCrossesAboveSlowD = slowK[1] < slowD[1] and slowK > slowD;
def slowKCrossesBelowSlowD = slowK[1] > slowD[1] and slowK < slowD; def greenRange = slowD[1] > posX_RangeBottom and slowD[1] < posX_RangeTop;
def redRange = slowD[1] < negX_RangeTop and slowD[1] > negX_RangeBottom;
def greenSignal = (histogramCrossesAbove and Highest(slowKCrossesAboveSlowD, signalBarsTolerance) > 0 and greenRange) or (slowKCrossesAboveSlowD and Highest(histogramCrossesAbove, signalBarsTolerance) > 0 and greenRange);
def redSignal = (histogramCrossesBelow and Highest(slowKCrossesBelowSlowD, signalBarsTolerance) > 0 and redRange) or slowKCrossesBelowSlowD and Highest(histogramCrossesBelow, signalBarsTolerance) > 0 and redRange;
plot greenSpike = greenSignal;
greenSpike.SetDefaultColor(Color.GREEN);
greenSpike.SetLineWeight(4);
plot redSpike = redSignal;
redSpike.SetDefaultColor(Color.RED);
redspike.SetLineWeight(3);
def orange_SlowK = reference StochasticFull(over_bought,over_sold,Orange_KPeriod,Orange_DPeriod,priceH,priceL,priceC,3,averageTypeSTOCH).FullK;
def Orange_SlowD = reference StochasticFull(over_bought,over_sold,Orange_KPeriod,Orange_DPeriod,priceH,priceL,priceC,3,averageTypeSTOCH).FullD;
plot data = (orange_SlowK[1] < Orange_SlowD[1]) and (orange_SlowK > Orange_SlowD) and (Lowest(orange_SlowK[1], 3) < 20) and (Diff[1] < Diff);
data.SetDefaultColor(Color.ORANGE);
data.setlineWeight(3);
